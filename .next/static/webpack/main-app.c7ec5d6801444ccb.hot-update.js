"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("main-app",{

/***/ "(app-pages-browser)/./node_modules/next/dist/client/app-index.js":
/*!****************************************************!*\
  !*** ./node_modules/next/dist/client/app-index.js ***!
  \****************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts("/* global location */ \nvar _s = $RefreshSig$();\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"hydrate\", ({\n    enumerable: true,\n    get: function() {\n        return hydrate;\n    }\n}));\nconst _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ \"(app-pages-browser)/./node_modules/@swc/helpers/esm/_interop_require_default.js\");\nconst _interop_require_wildcard = __webpack_require__(/*! @swc/helpers/_/_interop_require_wildcard */ \"(app-pages-browser)/./node_modules/@swc/helpers/esm/_interop_require_wildcard.js\");\n__webpack_require__(/*! ../build/polyfills/polyfill-module */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/polyfill-module.js\");\nconst _client = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! react-dom/client */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/client.js\"));\nconst _react = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"));\nconst _client1 = __webpack_require__(/*! react-server-dom-webpack/client */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/client.js\");\nconst _headmanagercontextsharedruntime = __webpack_require__(/*! ../shared/lib/head-manager-context.shared-runtime */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/head-manager-context.shared-runtime.js?97a31\");\nconst _approutercontextsharedruntime = __webpack_require__(/*! ../shared/lib/app-router-context.shared-runtime */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/app-router-context.shared-runtime.js?a8a81\");\nconst _onrecoverableerror = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! ./on-recoverable-error */ \"(app-pages-browser)/./node_modules/next/dist/client/on-recoverable-error.js\"));\nconst _appcallserver = __webpack_require__(/*! ./app-call-server */ \"(app-pages-browser)/./node_modules/next/dist/client/app-call-server.js?8b551\");\nconst _isnextroutererror = __webpack_require__(/*! ./components/is-next-router-error */ \"(app-pages-browser)/./node_modules/next/dist/client/components/is-next-router-error.js?727f1\");\n// Since React doesn't call onerror for errors caught in error boundaries.\nconst origConsoleError = window.console.error;\nwindow.console.error = function() {\n    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n        args[_key] = arguments[_key];\n    }\n    if ((0, _isnextroutererror.isNextRouterError)(args[0])) {\n        return;\n    }\n    origConsoleError.apply(window.console, args);\n};\nwindow.addEventListener(\"error\", (ev)=>{\n    if ((0, _isnextroutererror.isNextRouterError)(ev.error)) {\n        ev.preventDefault();\n        return;\n    }\n});\n/// <reference types=\"react-dom/experimental\" />\nconst appElement = document;\nconst getCacheKey = ()=>{\n    const { pathname, search } = location;\n    return pathname + search;\n};\nconst encoder = new TextEncoder();\nlet initialServerDataBuffer = undefined;\nlet initialServerDataWriter = undefined;\nlet initialServerDataLoaded = false;\nlet initialServerDataFlushed = false;\nlet initialFormStateData = null;\nfunction nextServerDataCallback(seg) {\n    if (seg[0] === 0) {\n        initialServerDataBuffer = [];\n    } else if (seg[0] === 1) {\n        if (!initialServerDataBuffer) throw new Error(\"Unexpected server data: missing bootstrap script.\");\n        if (initialServerDataWriter) {\n            initialServerDataWriter.enqueue(encoder.encode(seg[1]));\n        } else {\n            initialServerDataBuffer.push(seg[1]);\n        }\n    } else if (seg[0] === 2) {\n        initialFormStateData = seg[1];\n    }\n}\n// There might be race conditions between `nextServerDataRegisterWriter` and\n// `DOMContentLoaded`. The former will be called when React starts to hydrate\n// the root, the latter will be called when the DOM is fully loaded.\n// For streaming, the former is called first due to partial hydration.\n// For non-streaming, the latter can be called first.\n// Hence, we use two variables `initialServerDataLoaded` and\n// `initialServerDataFlushed` to make sure the writer will be closed and\n// `initialServerDataBuffer` will be cleared in the right time.\nfunction nextServerDataRegisterWriter(ctr) {\n    if (initialServerDataBuffer) {\n        initialServerDataBuffer.forEach((val)=>{\n            ctr.enqueue(encoder.encode(val));\n        });\n        if (initialServerDataLoaded && !initialServerDataFlushed) {\n            ctr.close();\n            initialServerDataFlushed = true;\n            initialServerDataBuffer = undefined;\n        }\n    }\n    initialServerDataWriter = ctr;\n}\n// When `DOMContentLoaded`, we can close all pending writers to finish hydration.\nconst DOMContentLoaded = function() {\n    if (initialServerDataWriter && !initialServerDataFlushed) {\n        initialServerDataWriter.close();\n        initialServerDataFlushed = true;\n        initialServerDataBuffer = undefined;\n    }\n    initialServerDataLoaded = true;\n};\n_c = DOMContentLoaded;\n// It's possible that the DOM is already loaded.\nif (document.readyState === \"loading\") {\n    document.addEventListener(\"DOMContentLoaded\", DOMContentLoaded, false);\n} else {\n    DOMContentLoaded();\n}\nconst nextServerDataLoadingGlobal = self.__next_f = self.__next_f || [];\nnextServerDataLoadingGlobal.forEach(nextServerDataCallback);\nnextServerDataLoadingGlobal.push = nextServerDataCallback;\nfunction createResponseCache() {\n    return new Map();\n}\nconst rscCache = createResponseCache();\nfunction useInitialServerResponse(cacheKey) {\n    const response = rscCache.get(cacheKey);\n    if (response) return response;\n    const readable = new ReadableStream({\n        start (controller) {\n            nextServerDataRegisterWriter(controller);\n        }\n    });\n    const newResponse = (0, _client1.createFromReadableStream)(readable, {\n        callServer: _appcallserver.callServer\n    });\n    rscCache.set(cacheKey, newResponse);\n    return newResponse;\n}\nfunction ServerRoot(param) {\n    _s();\n    let { cacheKey } = param;\n    _react.default.useEffect(()=>{\n        rscCache.delete(cacheKey);\n    });\n    const response = useInitialServerResponse(cacheKey);\n    const root = (0, _react.use)(response);\n    return root;\n}\n_s(ServerRoot, \"K9b7qXb5/x90+1mcPl2lLLR5/0A=\", false, function() {\n    return [\n        useInitialServerResponse\n    ];\n});\n_c1 = ServerRoot;\nconst StrictModeIfEnabled =  true ? _react.default.StrictMode : 0;\nfunction Root(param) {\n    let { children } = param;\n    if (false) {}\n    if (false) {}\n    return children;\n}\n_c2 = Root;\nfunction RSCComponent(props) {\n    return /*#__PURE__*/ _react.default.createElement(ServerRoot, {\n        ...props,\n        cacheKey: getCacheKey()\n    });\n}\n_c3 = RSCComponent;\nfunction hydrate() {\n    if (true) {\n        const rootLayoutMissingTagsError = self.__next_root_layout_missing_tags_error;\n        const HotReload = (__webpack_require__(/*! ./components/react-dev-overlay/hot-reloader-client */ \"(app-pages-browser)/./node_modules/next/dist/client/components/react-dev-overlay/hot-reloader-client.js?05a81\")[\"default\"]);\n        // Don't try to hydrate if root layout is missing required tags, render error instead\n        if (rootLayoutMissingTagsError) {\n            const reactRootElement = document.createElement(\"div\");\n            document.body.appendChild(reactRootElement);\n            const reactRoot = _client.default.createRoot(reactRootElement, {\n                onRecoverableError: _onrecoverableerror.default\n            });\n            reactRoot.render(/*#__PURE__*/ _react.default.createElement(_approutercontextsharedruntime.GlobalLayoutRouterContext.Provider, {\n                value: {\n                    buildId: \"development\",\n                    tree: rootLayoutMissingTagsError.tree,\n                    changeByServerResponse: ()=>{},\n                    focusAndScrollRef: {\n                        apply: false,\n                        onlyHashChange: false,\n                        hashFragment: null,\n                        segmentPaths: []\n                    },\n                    nextUrl: null\n                }\n            }, /*#__PURE__*/ _react.default.createElement(HotReload, {\n                assetPrefix: rootLayoutMissingTagsError.assetPrefix\n            })));\n            return;\n        }\n    }\n    const reactEl = /*#__PURE__*/ _react.default.createElement(StrictModeIfEnabled, null, /*#__PURE__*/ _react.default.createElement(_headmanagercontextsharedruntime.HeadManagerContext.Provider, {\n        value: {\n            appDir: true\n        }\n    }, /*#__PURE__*/ _react.default.createElement(Root, null, /*#__PURE__*/ _react.default.createElement(RSCComponent, null))));\n    const options = {\n        onRecoverableError: _onrecoverableerror.default\n    };\n    const isError = document.documentElement.id === \"__next_error__\";\n    if (true) {\n        // Patch console.error to collect information about hydration errors\n        const patchConsoleError = (__webpack_require__(/*! ./components/react-dev-overlay/internal/helpers/hydration-error-info */ \"(app-pages-browser)/./node_modules/next/dist/client/components/react-dev-overlay/internal/helpers/hydration-error-info.js?215b1\").patchConsoleError);\n        if (!isError) {\n            patchConsoleError();\n        }\n    }\n    if (isError) {\n        if (true) {\n            // if an error is thrown while rendering an RSC stream, this will catch it in dev\n            // and show the error overlay\n            const ReactDevOverlay = (__webpack_require__(/*! ./components/react-dev-overlay/internal/ReactDevOverlay */ \"(app-pages-browser)/./node_modules/next/dist/client/components/react-dev-overlay/internal/ReactDevOverlay.js?942b1\")[\"default\"]);\n            const INITIAL_OVERLAY_STATE = (__webpack_require__(/*! ./components/react-dev-overlay/internal/error-overlay-reducer */ \"(app-pages-browser)/./node_modules/next/dist/client/components/react-dev-overlay/internal/error-overlay-reducer.js?e7591\").INITIAL_OVERLAY_STATE);\n            const getSocketUrl = (__webpack_require__(/*! ./components/react-dev-overlay/internal/helpers/get-socket-url */ \"(app-pages-browser)/./node_modules/next/dist/client/components/react-dev-overlay/internal/helpers/get-socket-url.js?2fe01\").getSocketUrl);\n            let errorTree = /*#__PURE__*/ _react.default.createElement(ReactDevOverlay, {\n                state: INITIAL_OVERLAY_STATE,\n                onReactError: ()=>{}\n            }, reactEl);\n            const socketUrl = getSocketUrl( false || \"\");\n            const socket = new window.WebSocket(\"\" + socketUrl + \"/_next/webpack-hmr\");\n            // add minimal \"hot reload\" support for RSC errors\n            const handler = (event)=>{\n                let obj;\n                try {\n                    obj = JSON.parse(event.data);\n                } catch (e) {}\n                if (!obj || !(\"action\" in obj)) {\n                    return;\n                }\n                if (obj.action === \"serverComponentChanges\") {\n                    window.location.reload();\n                }\n            };\n            socket.addEventListener(\"message\", handler);\n            _client.default.createRoot(appElement, options).render(errorTree);\n        } else {}\n    } else {\n        _react.default.startTransition(()=>_client.default.hydrateRoot(appElement, reactEl, {\n                ...options,\n                formState: initialFormStateData\n            }));\n    }\n    // TODO-APP: Remove this logic when Float has GC built-in in development.\n    if (true) {\n        const { linkGc } = __webpack_require__(/*! ./app-link-gc */ \"(app-pages-browser)/./node_modules/next/dist/client/app-link-gc.js\");\n        linkGc();\n    }\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=app-index.js.map\nvar _c, _c1, _c2, _c3;\n$RefreshReg$(_c, \"DOMContentLoaded\");\n$RefreshReg$(_c1, \"ServerRoot\");\n$RefreshReg$(_c2, \"Root\");\n$RefreshReg$(_c3, \"RSCComponent\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/app-index.js\n"));

/***/ })

});