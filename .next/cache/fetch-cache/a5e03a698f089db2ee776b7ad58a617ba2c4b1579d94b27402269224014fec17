{"kind":"FETCH","data":{"headers":{"access-control-allow-origin":"*","age":"0","cache-control":"public, max-age=0, must-revalidate","connection":"keep-alive","content-encoding":"br","content-type":"application/json; charset=utf-8","date":"Sat, 13 Jan 2024 10:47:52 GMT","etag":"W/\"83c8-01YKYBzvX2QywRdpSgbm7t9yqrM\"","server":"Vercel","strict-transport-security":"max-age=63072000; includeSubDomains; preload","transfer-encoding":"chunked","x-powered-by":"Express","x-vercel-cache":"MISS","x-vercel-id":"bom1::iad1::xt99m-1705142871801-3422b4133d17"},"body":"","status":200,"url":"https://launch-api1.vercel.app/trek/tour/gokarna-murudeshwar-weekend-getaway"},"revalidate":31536000,"tags":[]}