{"kind":"FETCH","data":{"headers":{"access-control-allow-origin":"*","age":"0","cache-control":"public, max-age=0, must-revalidate","connection":"keep-alive","content-encoding":"br","content-type":"application/json; charset=utf-8","date":"Thu, 08 Feb 2024 09:18:56 GMT","etag":"W/\"76d2-AktW8ktktxD8uYJmknWVI7plby4\"","server":"Vercel","strict-transport-security":"max-age=63072000; includeSubDomains; preload","transfer-encoding":"chunked","x-powered-by":"Express","x-vercel-cache":"MISS","x-vercel-id":"bom1::iad1::spnc5-1707383935771-11af89854145"},"body":"","status":200,"url":"https://launch-api1.vercel.app/trek/trek/meruthi-hill-trek"},"revalidate":31536000,"tags":[]}