{"kind":"FETCH","data":{"headers":{"access-control-allow-origin":"*","age":"0","cache-control":"public, max-age=0, must-revalidate","connection":"keep-alive","content-encoding":"br","content-type":"application/json; charset=utf-8","date":"Wed, 21 Feb 2024 04:55:56 GMT","etag":"W/\"9ab8-z2VXWMgPQvajmnv4FdAtE7jtFLQ\"","server":"Vercel","strict-transport-security":"max-age=63072000; includeSubDomains; preload","transfer-encoding":"chunked","x-powered-by":"Express","x-vercel-cache":"MISS","x-vercel-id":"bom1::iad1::cv577-1708491355161-0b3c182cbcfa"},"body":"","status":200,"url":"https://launch-api1.vercel.app/trek/trek/kudremukh-trek"},"revalidate":60,"tags":[]}