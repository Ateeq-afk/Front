{"kind":"FETCH","data":{"headers":{"access-control-allow-origin":"*","age":"0","cache-control":"public, max-age=0, must-revalidate","connection":"keep-alive","content-encoding":"br","content-type":"application/json; charset=utf-8","date":"Mon, 22 Jan 2024 09:29:45 GMT","etag":"W/\"77dd-KB4G7XmskwaF8YlODY37JKPzGDs\"","server":"Vercel","strict-transport-security":"max-age=63072000; includeSubDomains; preload","transfer-encoding":"chunked","x-powered-by":"Express","x-vercel-cache":"MISS","x-vercel-id":"bom1::iad1::2cs52-1705915785213-f0c83e809725"},"body":"","status":200,"url":"https://launch-api1.vercel.app/trek/trek/kudremukh-trek"},"revalidate":31536000,"tags":[]}