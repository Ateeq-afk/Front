{"kind":"FETCH","data":{"headers":{"access-control-allow-origin":"*","age":"0","cache-control":"public, max-age=0, must-revalidate","connection":"keep-alive","content-encoding":"br","content-type":"application/json; charset=utf-8","date":"Thu, 15 Feb 2024 08:25:38 GMT","etag":"W/\"d6b9-RRcb+5MnhzYhrUmCIsEPeYi725A\"","server":"Vercel","strict-transport-security":"max-age=63072000; includeSubDomains; preload","transfer-encoding":"chunked","x-powered-by":"Express","x-vercel-cache":"MISS","x-vercel-id":"bom1::iad1::rjlqg-1707985537603-a1dd7129b88f"},"body":"{"over":[null],"products":[{"over":["Gokarna, a tranquil coastal town nestled in the state of Karnataka, is renowned for its serene and pristine beaches that stretch along the Arabian Sea. Often referred to as a hidden gem of South India, Gokarna offers a perfect blend of natural beauty, spirituality, and a laid-back atmosphere. Travelers visit Gokarna not only for its picturesque beaches but also to explore its rich cultural heritage, centered around ancient temples and sacred traditions. This town is a destination for those seeking a peaceful escape, where you can immerse yourself in the gentle rhythms of the sea, enjoy beach treks, indulge in local cuisine, and witness stunning sunsets. Gokarna is an ideal place to unwind, rejuvenate, and connect with the soul of coastal Karnataka.","Murudeshwar, another coastal gem along the Karnataka shoreline, offers a unique blend of natural beauty and spiritual significance. The town is most famous for the towering Lord Shiva statue that overlooks the Arabian Sea, making it an iconic landmark. The Murudeshwar temple, known for its architectural grandeur and cultural heritage, draws pilgrims and tourists alike. Besides its religious importance, Murudeshwar also boasts pristine beaches that invite visitors to relax and unwind. The town provides opportunities for beach activities, exploration of local life, and an enchanting view of the sea."],"included":["Comfortable and hygienic transportation","Breakfast on Day 1 and Day 2","Dinner on Day 1","Experienced driver and certified tour captains","Sightseeing as per itinerary","Accommodation - Campsite (twin sharing tents)"],"notincluded":["Entry charges to sightseeing locations","Additional adventure or water activities","Lunch on all days","Dinner on Day 2","Personal expenses","Anything not mentioned in the \"What's Included\" section"],"things":["ID: Soft-copy of Aadhar or government ID","Backpack: Trek-friendly","Clothes: Layered, extra socks","Rain Gear: Poncho/Raincoat","Toiletries: Basics","Snacks: Juice packs, energy bars","Medication: Personal","Camera: Optional","Power Bank"],"relatedtreks":["654413c414b99dd8e474e734","653adb139125d14cce9f7ceb","65441b6214b99dd8e474f145"],"_id":"6544072214b99dd8e474e54b","name":"Gokarna-Murudeshwar Weekend Getaway","maintype":"grouptour","statetype":"Karnataka","state":"State","for":"For","fromamount":5499,"reserveamount":2500,"day":"2 Days / 1 Night","trektype":"Tour Type","trektypename":"Beach Tour","level":"Activity-Level","levelname":"Easy","service":"Stay type","statename":"Karnataka","expertpara":"","lead1name":"","lead1oc":"","lead1pimgalt":"","itinerary":"The following detailed itinerary provides a day-by-day breakdown of your Gokarna-Murudeshwar Tour. From your late-evening departure from Bangalore to the moment you arrive back home, we've outlined your activities and experiences to make the most of your trip. Let's dive into the specifics.","days":[{"description":["The Journey begins in the late evening, The representative will pick you up from various locations, including:","Indiranagar - Karachi Bakery","Domlur - Union Bank","Yeshwanthpur - Metro Station Market Exit","Gorguntepalya - People Tree Hospital","Enjoy a scenic overnight journey, accompanied by AC Pushback seater suitable for your group size."],"day":"Day 0","cityName":"Departure from Bangalore","meals":"Please have your dinner before boarding the vehicle","_id":"6544072214b99dd8e474e54c"},{"description":["As you arrive at the Gokarna campsite, it's time to check in and freshen up. ","Breakfast will be served, providing you with the necessary energy for a day filled with exciting sightseeing.","Your Gokarna exploration encompasses visits to some of the region's most captivating attraction.","Yana Caves: Your adventure begins with a visit to the mystical Yana Caves, known for their unique limestone rock formations and tranquil surroundings.","Om Beach: You'll proceed to Om Beach, named after its natural Om-shaped formation. Here, you can enjoy water sports or practice beach yoga while taking in a serene sunset.","Kudle Beach: Next, you'll explore Kudle Beach, known for its golden sands and clear waters, providing an ideal setting for a leisurely stroll or engaging in various beach activities.","Lunch during this day is self-sponsored. In the evening, you'll return to the campsite for an overnight stay in the serene coastal town of Gokarna.","As the day winds down, have dinner and relax for the evening around a campfire ( If weather permits )."],"day":"Day 1","cityName":"Gokarna-Murudeshwar Exploration","meals":"Breakfast, Dinner","_id":"6544072214b99dd8e474e54d"},{"description":["On the second day of your journey, you'll start with an early wake-up call and have breakfast to prepare for another day of exploration. Here's what's on the agenda.","Mirjan Fort: Your first stop is the historic Mirjan Fort, known for its fascinating architecture and historical significance.","Murudeshwar: You'll then proceed to the sacred town of Murudeshwar, where you'll have the opportunity to witness the breathtaking colossal statue of Lord Shiva, a marvel of art and spirituality.","Jog Falls: The journey continues to Jog Falls, the tallest un-tiered waterfall in India. Jog Falls is particularly spectacular during the monsoon season.","After this enriching day of sightseeing, it's time to bid farewell to Gokarna and embark on the journey back to Bangalore, accompanied by a bag full of cherished memories. ","Break for a self-sponsored Lunch on the way.","You'll reach Bangalore early on Monday morning, before 5 am, concluding your remarkable Gokarna-Murudeshwara expedition."],"day":"Day 2","cityName":"Sightseeing and Departure","meals":"Breakfast","_id":"6544072214b99dd8e474e54e"}],"expectpara":"Embark on a soul-enriching journey in Gokarna and Murudeshwar, where the azure Arabian Sea meets pristine beaches. Discover ancient temples, like the magnificent Murudeshwar Temple, and unwind on the serene shores of Gokarna Beach. Engage with the warm-hearted locals, immersing yourself in their traditions. Capture stunning seascapes and relish the comfort of cozy accommodations. Let experienced guides illuminate your path, creating cherished memories amidst this coastal paradise.","expecthead1":"Accommodations","expecthead1para":"Campsite - Twin sharing tents","expecthead2":"Backpackers United Team","expecthead2para":"Backpackers experts will accompany the entire trip, and local backpackers will join us along the way.","faq":[{"question":"How can I reserve my slot ?","answer":"You can directly reserve your slots by booking on the website, please ensure proper dates are selected before confirming your booking.","_id":"6544072214b99dd8e474e54f"},{"question":"Is it safe for Women travellers ?","answer":"Safety and Security Guidelines are followed at all times, and it is our topmost priority.\nWe have certified trek leads (Male/Female) accompanying the participants at all times and our stay follows well-rounded safety measures.","_id":"6544072214b99dd8e474e550"},{"question":"What payment options do I have ?","answer":"We have multiple payment options on the website that you can refer to.","_id":"6544072214b99dd8e474e551"},{"question":"What is special in Murdeshwar?","answer":"Murdeshwar is known for having the world's second tallest Shiva statue and is located on the coast of the Laccadive Sea. It is also renowned for the Murudeshwara Temple."},{"question":"How far is Murudeshwar from Gokarna?","answer":"Murudeshwar is around 2 hours away from Gokarna, covering a distance of 77.6 km."},{"question":"Why is Gokarna so famous?","answer":"Gokarna is famous for its beaches, including the Gokarna main beach and Kudle beach facing west, and Om beach, Half moon Beach, Paradise Beach (also known as Full moon), and Belekan beach facing south."},{"question":"Can I indulge in water sports in Gokarna?","answer":"Yes, Gokarna offers water sports activities such as banana boat rides and parasailing at its beaches."},{"question":"What local cuisine should I try in Gokarna and Murdeshwara?","answer":"Don't miss the opportunity to savor local coastal delicacies, including seafood dishes like fish curry and Neer Dosa."},{"question":"What is the historical significance of Gokarna?","answer":"Gokarna has historical importance as a pilgrimage site with ancient temples, including the revered Mahabaleshwar Temple dedicated to Lord Shiva."}],"related":[{"rday":"2 Days For","rname":"Kannur Weekend Getaway","ramount":6999,"rimagealt":"Kannur Backpacking Tour","rtype":"Tour Type ","rtypename":"Beach Tour","rlevel":"Stay-Type","rlevelname":"3 Star Hotel","rservice":"State","rservicename":"Kerala","_id":"6544072214b99dd8e474e552","rimage":"nahel-abdul-hadi-3ye0on5cMpQ-unsplash_11zon.webp"},{"rday":"2 Days For","rname":"Karwar Weekend Getaway","ramount":6999,"rimagealt":"Karwar","rtype":"Tour Type ","rtypename":"Beach Tour","rlevel":"Stay-Type","rlevelname":"3 Star Hotel","rservice":"State","rservicename":"Karnataka","_id":"6544072214b99dd8e474e553","rimage":""},{"rday":"2 Days For","rname":"Udupi-Mangalore Weekend Getaway","ramount":6999,"rimagealt":"Udupi-Mangalore","rtype":"Tour Type ","rtypename":"Beach Tour","rlevel":"Stay-Type","rlevelname":"3 Star Hotel","rservice":"State","rservicename":"Karnataka","_id":"6544072214b99dd8e474e554","rimage":"island_11zon.webp"}],"batch":[{"date":"16 Feb, 2024 (Friday)","amount":5499},{"date":"01 Mar, 2024 (Friday)","amount":5499},{"date":"08 Mar, 2024 (Friday)","amount":5499}],"createdAt":"2023-11-02T20:31:30.798Z","updatedAt":"2023-11-19T10:28:27.600Z","__v":0,"servicename":"Campsite","urllink":"gokarna-murudeshwar-weekend-getaway","testimage":"testimage--tharun-kumar-u-uY0n8FV_ds0-unsplash_11zon.webp","amount":"5499","metades":"Explore stunning Gokarna-Murudeshwar beaches on a weekend from Bangalore. Dive into coastal beauty with exclusive discounts. Book seaside adventure now!","metatitle":"Gokarna-Murudeshwar Getaway: Beach Savings | Book @ 5499","testimagealt":"Gokarna-Murudeshwar Weekend Getaway: Majestic Lord Shiva by the Seaside","originalprice":6999,"h2":"Gokarna-Murudeshwar Trip from Bangalore"},{"over":["Goa, often referred to as the \"Pearl of the Orient,\" is a coastal state located on the southwestern coast of India. Renowned for its stunning beaches, vibrant culture, rich history, and a unique blend of Indian and Portuguese influences, Goa stands out as one of India's top tourist destinations.\nGoa's charm lies in its diversity. Whether you're looking for adventure, relaxation, culture, or a mix of everything, Goa has something to offer every traveller. Explore its beaches, embrace its vibrant culture, and savor its delightful cuisine for an unforgettable experience in India's coastal paradise."],"included":["Comfortable and hygienic A\\C transportation","Breakfast on day 2 and day 3","Experienced driver and Tour Captain","Sightseeing as per itinerary","2-Night Resort Stay (Twin Sharing)"],"notincluded":["Entry charges to sightseeing locations","Additional adventure or water activities","Personal expenses","Anything not mentioned in the \"What's Included\" section"],"things":["ID: Soft-copy of Aadhaar or government ID","Backpack: Trek-friendly","Clothes: Layered, extra socks","Rain Gear: Poncho/Raincoat","Toiletries: Basics","Snacks: Juice packs, energy bars","Medication: Personal"],"relatedtreks":["654e2226d19d7cc87fbf2ec6","6554d5f139a87c73f1cac9de"],"_id":"65554be639a87c73f1cadfb6","name":"Goa Tour: A Captivating 3-Day Journey","urllink":"goa-backpacking-tour","maintype":"longtour","statetype":"Goa","state":"State","amount":"7999","fromamount":7999,"reserveamount":7999,"day":"3 Days 2 Nights","trektype":"Tour Type","trektypename":"Beach Tour","testimage":"goa 2_11zon.webp","testimagealt":"Goa Tour: Sea View Harmony with Stunning Beachside Scene from bangalore","level":"Activity Level","levelname":"Easy","service":"Stay Type","servicename":"3-Star Hotel ","statename":"Goa","expertpara":"","lead1name":"","lead1oc":"","lead1pimgalt":"","lead2name":"","lead2oc":"","lead2pimgalt":"","itinerary":"The following detailed itinerary provides a day-by-day breakdown of your exciting Goa adventure. From your late-evening departure from Bangalore to the moment you arrive back home, we've outlined your activities and experiences to make the most of your trip. Let's dive into the specifics.","days":[{"description":["Your Goa adventure begins with an overnight journey from Bangalore. Our representative will pick you up in the late evening from the following convenient locations:","Indiranagar - Karachi Bakery","Domlur - Union Bank","Yeshwantpur - Metro Station Market Exit","Gurguntepalya - People Tree Hospital","Prepare for a comfortable journey through a Bus(A/C Pushback seater), tailored to the size of our group. Get ready for an exciting getaway to Goa!"],"day":"Day 0","cityName":"Departure from Bengalore","meals":" Please have your dinner before boarding the vehicle.","image":null,"imagealt":"","_id":"65554be639a87c73f1cadfb7"},{"description":["Arrive in Goa, the \"Pearl of the Orient,\" known for its stunning beaches,\nvibrant nightlife, and rich culture.","Enjoy a delicious (Self-sponsored) breakfast on the way","Reach Goa and head to your hotel for check-in on or before 2pm (According to hotel policy) and settle into your accommodation.","Begin your exploration of North Goa with a visit to the iconic Baga Beach,\nfamous for its pristine sands and water sports.","Spend your afternoon at the hotel, relaxing and unwinding.\nReturn to the hotel for an overnight stay\n"],"day":"Day 1","cityName":"Goa Exploration ","meals":"No meals","imagealt":"Goa Tour: Captivating Seaside Beauty with a Serene Bluish Sky","_id":"65554be639a87c73f1cadfb8"},{"description":["Discover More of North Goa: After breakfast, set out to explore more of North Goa's attractions, including:","Aguada Fort: Experience the historic Aguada Fort, where you can marvel at panoramic views of the Arabian Sea and learn about its colonial past.","Dona Paula: Explore the scenic viewpoint and beach of Dona Paula, known for its romantic legend and picturesque setting.","Indulge in a delicious lunch at a local restaurant to fuel your adventures.","Anjuna Beach: Dive into the vibrant atmosphere of Anjuna Beach, famous for its lively flea market and bustling vibe.","Unwind in the comfort of your room for another relaxing night in North Goa. Enjoy the perfect blend of history, romance, and beach vibes on your Goa getaway."],"day":"Day 2 ","cityName":"Exploring North Goa","meals":"Breakfast ","image":"dayImage[2]--baga beach.png","imagealt":"Goa Tour: Dive into the Excitement of Baga Beach Water Sports","_id":"65554be639a87c73f1cadfb9"},{"description":["Explore South Goa: After a fulfilling breakfast, bid farewell to your hotel in North Goa and set off to discover the serene landscapes of South Goa.","Your South Goa adventure awaits, with visits to:","Basilica of Bom Jesus: Immerse yourself in the UNESCO-listed Basilica of Bom Jesus, renowned for its magnificent baroque architecture and religious significance.","Sé Cathedral: Marvel at the grandeur of Sé Cathedral, one of the largest churches in Asia, and admire its breathtaking architecture.","Colva Beach: Unwind and soak up the tranquility at Colva Beach, celebrated for its serene ambiance and picturesque views.","Take a break and savor a delicious lunch at a local restaurant, indulging in the flavors of Goan cuisine.","As the day draws to a close, reflect on your South Goa exploration, filled with awe-inspiring sights and memorable experiences."],"day":"Day 3","cityName":"Departure and Sightseeing","meals":"Breakfast","image":"dayImage[3]--Basilica of Bom jesus.png","imagealt":"Goa Tour: Marvel at the Historic Beauty of Basilica of Bom Jesus Church","_id":"65554be639a87c73f1cadfba"}],"expectpara":"Discover the enchanting allure of Goa, where vibrant landscapes unfold. Immerse yourself in the coastal beauty, exploring dense jungles and pristine beaches. Engage in thrilling outdoor activities, capturing the essence of adventure amidst serene surroundings. Dive into the rich local culture through meaningful interactions. Cherish tranquil moments during peaceful walks and unwinding in nature's embrace.","expecthead1":"Accommodations","expecthead1para":"3-star hotel under double occupancy (twin sharing). Check-in at your hotel and complete the necessary formalities. Also, the rooms being allotted upon arrival is only for freshen up (on sharing basis, girls and boys separate) and later after completing the sightseeing on day 1, same and additional rooms will be allotted on double occupancy. In case rooms are available the rooms will be allotted on the arrival. At rare scenarios where there is any delay to check in to your hotel rooms our dedicated tour captains are committed to enhancing your experience by exploring nearby places.","expecthead2":"Backpackers United Team","expecthead2para":"Backpackers experts will accompany the entire trip, and local backpackers will join us along the way.","related":[{"rday":"3 Days For","rname":"Coorg Tour: Discovering the Scotland of India","ramount":9999,"rimage":"relatedImage[0]--Coorg_xGek52V_thumb_11zon.png","rimagealt":"Coorg tour from bangalore","rtype":"Tour Type","rtypename":"Hill Station","rlevel":"Stay Type","rlevelname":"3 Star Hotel","_id":"65554be639a87c73f1cadfbb","rservice":"State","rservicename":"Karnataka"},{"rday":"3 Days For","rname":"Chikmagalur Tour: A 3-Day Nature Escape","ramount":9999,"rimage":"relatedImage[1]--Siri cafe Ckm_11zon.png","rimagealt":"Chikmagalur tour from bangalore","rtype":"Tour Type","rtypename":"Hill station","rlevel":"Stay Type","rlevelname":"3 Star Hotel","rservice":"State","rservicename":"Karnataka","_id":"65554be639a87c73f1cadfbc"},{"rday":"3 Days For","rname":"Munnar Tour: Paradise in the Western Ghats","ramount":9999,"rimage":"relatedImage[2]--Munnar cover photo.png","rimagealt":"Munnar Tour from Bangalore","rtype":"Tour Type","rtypename":"Hill station","rlevel":"Stay Type","rlevelname":"3 Star Hotel","rservice":"State","rservicename":"Kerala","_id":"65554be639a87c73f1cadfbd"}],"batch":[{"date":"Mar 28, 2024 (Thursday)","amount":7999}],"faq":[{"question":"How can I reserve my slot ?","answer":"You can directly reserve your slots by booking on the website, please ensure proper dates are selected before confirming your booking"},{"question":"Which is the best time to visit Goa?","answer":"\nThe best time to visit Goa is during the winter months, from November to February. This period experiences pleasant weather with temperatures ranging from 15 to 30 degrees Celsius. The cool and dry climate during these months is ideal for beach activities, water sports, and exploring the vibrant nightlife that Goa is renowned for. Additionally, this time avoids the monsoon season, ensuring a more comfortable and enjoyable experience."},{"question":"What is the local cuisine of Goa?","answer":"\nGoa is famous for its diverse and flavorful cuisine, influenced by a mix of Konkani, Portuguese, and other regional Indian flavors."},{"question":"Is Goa nightlife safe?","answer":"Goa is considered very safe for women at night, particularly in the lively North, where the constant activity contributes to a secure environment. The South, being less influenced by tourists and more residential, is also regarded as quite safe for women."},{"question":"Which part of Goa is best?","answer":"For a peaceful vacation with serene beaches, South Goa is the ideal destination. It's less commercially developed beaches like Palolem, Agonda, and Colva offer a unique charm, perfect for relaxation, sunbathing, and leisurely strolls along the shore."},{"question":"What makes Goa unique?","answer":"Goa stands out as the smallest state in the Indian subcontinent, renowned for its unspoiled beaches and sacred sites. The tropical climate ensures a year-round influx of tourists."},{"question":"What payment options do I have ?","answer":"We have multiple payment options on the website that you can refer to."},{"question":"What language is spoken in Goa?","answer":"Konkani is the primary language spoken by the majority in Goa, and it is the official language. Additionally, languages like Kannada and Marathi are co-official and also widely used."}],"createdAt":"2023-11-15T22:53:26.751Z","updatedAt":"2023-11-15T22:53:26.751Z","__v":0,"metades":"Embark on a budget-friendly 3-day tour from Bangalore to experience Goa's vibrant beaches and nightlife. Sun, sea, and savings await! Book now! ","metatitle":"Goa Tour: 3 Days Fun & Savings | Bangalore Budget Friendly","h2":"Goa Trip from Bangalore"},{"over":["Nestled in the lush landscapes of Kerala, India, Wayanad beckons travelers with its harmonious blend of pristine nature, rich history, and vibrant culture. This picturesque district, located in the northeastern part of Kerala, is a haven for those seeking a retreat from the bustling urban life. ","In essence, Wayanad is a must-visit destination for those yearning to experience the magic of nature, adventure, and culture. The stunning beauty of the hills, tea gardens, waterfalls, and exotic wildlife is sure to captivate your heart and leave you rejuvenated. So, pack your bags and set forth on an unforgettable journey to Wayanad!"],"included":["Comfortable and hygienic transportation","Breakfast on Day 1 and Day 2","Dinner on Day 1","Experienced driver and certified tour captain","Sightseeing as per itinerary","3-star hotel accommodation"],"notincluded":["Entry charges to sightseeing locations","Additional adventure or water activities","Lunch on all days","Dinner on Day 2","Personal expenses","Anything not mentioned in the \"What's Included\" section"],"things":["ID: Soft-copy of Aadhar or government ID","Backpack: Trek-friendly","Clothes: Layered, extra socks","Rain Gear: Poncho/Raincoat","Toiletries: Basics","Snacks: Juice packs, energy bars","Medication: Personal","Camera: Optional","Power Bank"],"relatedtreks":["653c31ff9125d14cce9f8ba3","653adb139125d14cce9f7ceb","653b03f59125d14cce9f7eb4"],"_id":"653a99d59fb5aebdb4095edb","name":"Wayanad Weekend Getaway","maintype":"grouptour","statetype":"Kerala","state":"State","for":"For","fromamount":5599,"reserveamount":2500,"day":"2 Days / 1 Night","trektype":"Tour Type","trektypename":"Hill Station","level":"Activity-Level","levelname":"Easy","service":"Stay Type","statename":"Kerala","itinerary":"The following detailed itinerary provides a day-by-day breakdown of your exciting Wayanad adventure. From your late-evening departure from Bangalore to the moment you arrive back home, we've outlined your activities and experiences to make the most of your trip. Let's dive into the specifics.","days":[{"description":["Your Wayanad adventure begins with an overnight journey from Bangalore. Our representative will pick you up in the late evening from the following convenient locations:","Indiranagar - Karachi Bakery","Domlur - Union Bank","Yeshwantpur - Metro Station Market Exit","Gurguntepalya - People Tree Hospital","Prepare for a comfortable journey through a Tempo Traveller(A/C Pushback seater), tailored to the size of our group. Get ready for an exciting getaway to Wayanad!\n"],"day":"Day 0","cityName":"Departure from Bangalore","meals":"Please have your dinner before boarding the vehicle.","_id":"653a99d59fb5aebdb4095edc"},{"description":["Arrive in Wayanad in the morning, surrounded by picturesque valleys and fresh air.  ","Head to your hotel for check-in and settle into your accommodation.  ","Begin your day with breakfast to fuel up for the adventures ahead.  ","Your day of exploration takes you to the following attractions:","Edakkal Caves nestled in the hills of Kerala, India, unveil a prehistoric canvas with ancient petroglyphs, narrating tales etched in stone.","Banasura Dam, a serene reservoir surrounded by natural beauty, offers a tranquil escape with its expansive waters and scenic landscapes.  "," Muddy boots Zipline, where the excitement soars as you glide through the treetops, embracing the adrenaline-fueled beauty of this exhilarating activity.","Wayanad Tea Museum, the journey from leaf to cup unfolds in a captivating showcase of the region's tea-making heritage.","Take a break for lunch (self-sponsored)","After a day filled with adventure, return to your hotel and have dinner.","Retire for an overnight stay in Wayanad."],"day":"Day 1","cityName":"Wayanad Exploration","meals":"Breakfast,Dinner","image":"dayImage[1]--360_F_328350822_lmtmoyzpb76l2ahrlAkvMSUa1MH7qmqS.jpg","_id":"653a99d59fb5aebdb4095edd","imagealt":"Wayanad Weekend Getaway: Picturesque Banasura Dam Surrounded by Greenery"},{"description":["Enjoy a picturesque morning view and have breakfast at the hotel.  ","Begin your sightseeing tour with the following itinerary:  ","900 Kandi (Glass Bridge) a marvel of engineering and breathtaking views, offers a daring yet awe-inspiring experience as you walk on air amidst stunning landscapes.  ","Lakkidi View Point unveils panoramic vistas that capture the beauty of Wayanad, making it a must-visit spot for awe-inspiring views. ","Savor lunch (self-sponsored).","Depart for Bangalore, concluding your memorable Wayanad tour.  ","Note: You'll reach back in Bangalore between 1:00 AM to 3:00 AM midnight.\n"],"day":"Day 2","cityName":"Sightseeing and Departure","meals":"Breakfast","image":"dayImage[2]--IMG_20190912_113024_218.jpg","_id":"653a99d59fb5aebdb4095ede","imagealt":"Wayanad Weekend Getaway: Serene View of 900 Kandi (Glass Bridge) in Lush Green Surroundings"}],"expectpara":"Immerse yourself in the natural splendor of Wayanad, exploring lush spice plantations, dense forests, and cascading waterfalls. Take guided tours of must-see attractions like Edakkal Caves and Soochipara Falls, capturing breathtaking landscapes through your lens. Engage in various outdoor activities and nature walks that blend the thrill of adventure with the serenity of the environment. Learn about the local culture and traditions through meaningful interactions with the community. Enjoy moments of tranquility as you take peaceful walks or simply unwind amidst nature. Create lasting memories while benefiting from comfortable accommodations and the expertise of experienced guides who will enrich your journey with local insights.","expecthead1":"Accommodations","expecthead1para":"3 Star hotel under double occupancy (twin sharing). \nCheck in at your hotel and complete the necessary formalities. \nAlso the rooms being allotted upon arrival is only for freshen up (on sharing basis, girls and boys separate) and later after completing the sightseeing on day 1, same and additional rooms will be alloted on double occupancy. \nIn case rooms are available the rooms will be alloted on the arrival. \nAt rare scenarios where there is any delay to check in to your hotel rooms our dedicated tour captains are committed to enhancing your experience by exploring nearby places.","expecthead2":"Backpackers United Team","expecthead2para":"Backpackers experts will accompany the entire trip, and local backpackers will join us along the way.","faq":[{"question":"How can I reserve my slot ?","answer":"You can directly reserve your slots by booking on the website, please ensure proper dates are selected before confirming your booking.","_id":"653a99d59fb5aebdb4095edf"},{"question":"Is it safe for Women travellers ?","answer":"Safety and Security Guidelines are followed at all times, and it is our topmost priority.\nWe have certified trek leads (Male/Female) accompanying the participants at all times and our stay follows well-rounded safety measures.","_id":"653a99d59fb5aebdb4095ee0"},{"question":"What payment options do I have ?","answer":"We have multiple payment options on the website that you can refer to.","_id":"653a99d59fb5aebdb4095ee1"},{"question":"What is the local cuisine of Wayanad?","answer":"Wayanad's culinary scene is a diverse blend, influenced by Arab, Zamorin, and Chirakkal cuisines, with a touch of Konkani flavors. Highlights include Malabar paratha, Dum Biryani, Pathiri (rice bread), ghee and saffron rice. Ghee Roast Dosa, Appams, and Idlis are also well-loved, complemented by the regional specialty, Toddy, a locally fermented alcoholic beverage sourced from palm and coconut palm"},{"question":"What is the distance between Wayanad and Bangalore?","answer":"The distance between Wayanad and Bangalore is 264 kilometres."},{"question":"What are the activities to do in Wayanad?","answer":"In addition to exploring tea estates and spice plantations, common activities in Wayanad include enjoying boat rides, kayaking, and ziplining near Banasura Dam, as well as embarking on short treks to Edakkal Caves and Chembra peak for breathtaking views.\n"},{"question":"How can you confirm your booking?","answer":"You can reach out to Backpackers United to get details about your booking and other important information related to your tour packages."}],"related":[{"rday":"2 Days For","rname":"Ooty Weekend Getaway","ramount":6999,"rimage":"IMG20220410121642_11zon.webp","rimagealt":"ooty","rtype":"Tour Type ","rtypename":"Hill Station","rlevel":"Stay-Type","rlevelname":"3 Star Hotel","rservice":"State","rservicename":"Tamil Nadu","_id":"653a99d59fb5aebdb4095ee2"},{"rday":"2 Days For","rname":"Chikmagalur Weekend Getaway","ramount":6999,"rimage":"siri_11zon.webp","rimagealt":"chickmangalur","rtype":"Tour Type ","rtypename":"Hill Station","rlevel":"Stay-Type","rlevelname":"3 Star Hotel","rservice":"State","rservicename":"Karnataka","_id":"653a99d59fb5aebdb4095ee3"},{"rday":"2 Days For","rname":"Kodaikanal Weekend Getaway","ramount":6999,"rimage":"testimage--69_39_11zon.webp","rimagealt":"kodaikanal","rtype":"Tour Type ","rtypename":"Hill Station","rlevel":"Stay-Type","rlevelname":"3 Star Hotel","rservice":"State","rservicename":"Tamil Nadu","_id":"653a99d59fb5aebdb4095ee4"}],"batch":[{"date":"01 Mar, 2024 (Friday)","amount":5599},{"date":"08 Mar, 2024 (Friday)","amount":5599},{"date":"29 Mar, 2024 (Friday)","amount":5599}],"createdAt":"2023-10-26T16:54:45.742Z","updatedAt":"2023-11-19T09:15:10.196Z","__v":0,"servicename":"3 Star Hotel","testimage":"testimage--wayanad (2).jpg","urllink":"wayanad-weekend-getaway","amount":"5599","metades":"Escape to Wayanad for a weekend getaway from Bangalore. Enjoy nature's serenity with special savings. Book now for an affordable retreat!","metatitle":"Wayanad Weekend Getaway - Book Now from Bangalore","testimagealt":"Wayanad Weekend Getaway: Panoramic Mountain Vista from the Glass Bridge","originalprice":6999,"h2":"Wayanad Trip from Bangalore"},{"over":["Kodaikanal Off beat Tamil Nadu offer a breathtaking blend of nature's splendor and tranquility. Nestled in the Nilgiri Hills, Kookal enchants with its lush tea gardens and mist-kissed mountains. Visitors revel in serene walks amidst the verdant landscape, immersing in the symphony of birdsong and rustling leaves.","Meanwhile, Silent Valley Point captivates with its pristine, untouched beauty. Tucked away from the bustling world, it provides a sanctuary for those seeking solace in the embrace of ancient forests and the gentle murmur of cascading streams. This duo of destinations promises an immersive experience in the lap of South India's mesmerizing wilderness."],"included":["Comfortable and hygienic transportation","Breakfast on Day 2","Dinner on Day 1","Experienced driver and certified tour captain","Sightseeing as per itinerary","3 Star Hotel"],"notincluded":["Entry charges to sightseeing locations","Additional adventure or water activities","Lunch on all days","Breakfast on Day 1 and Dinner on Day 2","Personal expenses","Anything not mentioned in the \"What's Included\" section"],"things":["ID: Soft-copy of Aadhar or government ID","Backpack: Trek-friendly","Clothes: Layered, extra socks","Rain Gear: Poncho/Raincoat","Toiletries: Basics","Snacks: Juice packs, energy bars","Medication: Personal","Camera: Optional","Power Bank"],"relatedtreks":["6544d1c414b99dd8e47502c4","6544e6fd14b99dd8e475091a","65454da514b99dd8e4751266"],"_id":"6544d88314b99dd8e47506e7","name":"Kodaikanal Backpacking Tour","maintype":"grouptour","statetype":"Tamil Nadu","state":"State","for":"For","fromamount":6499,"reserveamount":2500,"day":"2 Days / 1 Night","trektype":"Tour Type","trektypename":"Off Beat Tour","level":"Activity-Level","levelname":"Easy","service":"Stay type","statename":"Tamilnadu","expertpara":"","lead1name":"","lead1oc":"","lead1pimgalt":"","itinerary":"The following detailed itinerary provides a day-by-day breakdown of your Kodaikanal Off beat Tour. From your late-evening departure from Bangalore to the moment you arrive back home, we've outlined your activities and experiences to make the most of your trip. Let's dive into the specifics.","days":[{"description":["Your Kodaikanal adventure begins with an overnight journey from Bangalore. Our representative will pick you up in the late evening from the following convenient locations:","Indiranagar - Karachi Bakery","Domlur - Union Bank","Silk Board - Bharath Petrol pump","Enjoy a scenic overnight journey, accompanied by  AC Pushback seater suitable for your group size."],"day":"Day 0","cityName":"Departure from Bangalore","meals":"Please have your dinner before boarding the bus","_id":"6544d88314b99dd8e47506e8"},{"description":["Upon reaching Kodaikanal in the morning, complete your check-in at the hotel.","Enjoy a self-sponsored breakfast to fuel up for the day ahead.","Sightseeing places are as follows:","Silent Valley View point offers a tranquil panorama of lush landscapes, providing visitors with a serene and breathtaking escape into the beauty of nature.","Poombarai Village View Point in the hills offers a peaceful retreat with panoramic views of the surrounding landscapes.","Kookal Lake is Located near a village named Kookal, the entire village is adorned by the lake and its beauty,","Return to the hotel after your sightseeing tour and have dinner.","Experience a comfortable overnight stay in Kodaikanal"],"day":"Day 1","cityName":"Kodaikanal Off-beat Exploration","meals":"Dinner","_id":"6544d88314b99dd8e47506e9"},{"description":["Start your morning with breakfast at the hotel.","Check out from the hotel and get ready for your return journey to Bangalore, On your way back to Bangalore, the itinerary includes the following attractions:","Mannavanur Lake surrounded by rolling hills and lush greenery, offers a peaceful retreat in the heart of nature, creating a serene ambiance for visitors to enjoy the scenic beauty of the landscape.","Sheep Research Center is a hub for innovative research, contributing to advancements in sheep farming practices and fostering knowledge exchange within the agricultural community.","Polur Falls has a slanting height and lies inside a forest reserve that is unhindered by human encroachments. It is quiet, peaceful, and a haven for those who want to escape from concrete forest parks.","Poondi dam stands as a testament to water management, providing both irrigation support and a scenic environment for those seeking a peaceful retreat.","Take a break for lunch (self-sponsored).","Depart for Bangalore, carrying a bag full of unforgettable experiences, Anticipate reaching Bangalore between 4:00 AM to 05:00 AM."],"day":"Day 2","cityName":"Sightseeing and Departure","meals":"Breakfast","_id":"6544d88314b99dd8e47506ea"}],"expectpara":"Mannavanur Lake, Sheep Research Center, Polur Falls, Poondi Dam, Silent Valley View Point, Moir Point, Poombarai Village View Point, and Kookal Lake are enchanting destinations each offering unique experiences. At Mannavanur Lake, you can expect serene waters surrounded by lush landscapes, perfect for tranquil nature walks. The Sheep Research Center provides an insightful glimpse into agricultural practices and animal husbandry. Polur Falls is a nature lover's delight, offering picturesque waterfalls and refreshing ambience. Poondi Dam is an engineering marvel, offering panoramic views and a peaceful setting for relaxation.","expecthead1":"Accommodations","expecthead1para":"3 Star hotel under double occupancy (twin sharing). \nCheck in at your hotel and complete the necessary formalities. \nAlso the rooms being allotted upon arrival is only for freshen up (on sharing basis, girls and boys separate) and later after completing the sightseeing on day 1, same and additional rooms will be alloted on double occupancy. \nIn case rooms are available the rooms will be alloted on the arrival. \nAt rare scenarios where there is any delay to check in to your hotel rooms our dedicated tour captains are committed to enhancing your experience by exploring nearby places.","expecthead2":"Backpackers United Team","expecthead2para":"Backpackers experts will accompany the entire trip, and local backpackers will join us along the way.","faq":[{"question":"How can I reserve my slot ?","answer":"You can directly reserve your slots by booking on the website, please ensure proper dates are selected before confirming your booking.","_id":"6544d88314b99dd8e47506eb"},{"question":"Is it safe for Women travellers ?","answer":"Safety and Security Guidelines are followed at all times, and it is our topmost priority.\nWe have certified trek leads (Male/Female) accompanying the participants at all times and our stay follows well-rounded safety measures.","_id":"6544d88314b99dd8e47506ec"},{"question":"What payment options do I have ?","answer":"We have multiple payment options on the website that you can refer to.","_id":"6544d88314b99dd8e47506ed"},{"question":"What is Kodaikanal famous for?","answer":"Kodaikanal, often referred to as the \"Princess of Hill Stations,\" is renowned for its enchanting landscapes, cool climate, lush greenery, and beautiful lakes. The town is a popular hill station in Tamil Nadu, attracting visitors with its natural beauty and serene atmosphere.\n"},{"question":"How can you confirm your booking?","answer":"You can reach out to Backpackers United to get details about your booking and other important information related to your tour packages."},{"question":"Which is the best time to visit Kodaikanal?","answer":"The best time to visit Kodaikanal is during the months of April to June and September to October. During these periods, the weather is pleasant, and the scenic beauty of the hill station is at its peak, making it an ideal time for a visit."},{"question":"What are the must places to visit in Kodaikaanal?","answer":"Explore popular sites in Kodaikanal like Guna Caves, Kodai Lake, Pillar Rocks, Coakers Walk, Dolhpin nose, Catherine falls, Berijam lake etc"},{"question":"what can i shop in kodaikanal?","answer":"In Kodaikanal, you can purchase a variety of locally made and unique items. Some popular things to buy in Kodaikanal include: Homemade Chocolates, Eucalyptus Oil, Spices, Cheese, Antiques and Souvenirs, Warm Clothing."}],"related":[{"rday":"2 Days For","rname":"Chikmagalur Backpacking Tour","ramount":6999,"rimagealt":"Chikmagalur Off Beat ","rtype":"Tour Type ","rtypename":"Off Beat Tour","rlevel":"Stay-Type","rlevelname":"Home Stay","rservice":"State","rservicename":"Karnataka","_id":"6544d88314b99dd8e47506ee","rimage":"3_3_11zon.webp"},{"rday":"2 Days For","rname":"Ooty Backpacking Tour","ramount":6999,"rimagealt":"Nilgiris Off Beat ","rtype":"Tour Type ","rtypename":"Off Beat Tour","rlevel":"Stay-Type","rlevelname":"3 Star Hotel","rservice":"State","rservicename":"Tamil Nadu","_id":"6544d88314b99dd8e47506ef","rimage":"testimage--chaitanya-rayampally-XhYP3T-telg-unsplash_11zon.webp"},{"rday":"2 Days For","rname":"Thekkady Weekend Getaway","ramount":6999,"rimagealt":"Thekkady","rtype":"Tour Type ","rtypename":"Nature Tour","rlevel":"Stay-Type","rlevelname":"3 Star Hotel","rservice":"State","rservicename":"Kerala","_id":"6544d88314b99dd8e47506f0","rimage":"navi-pk0gENGSkqE-unsplash_11zon.webp"}],"createdAt":"2023-11-03T11:24:51.631Z","updatedAt":"2023-11-19T11:07:29.453Z","__v":0,"servicename":"3 Star Hotel","urllink":"kodaikanal-backpacking-tour","amount":"6499","testimage":"balaji-malliswamy-KDIBZFIw-wQ-unsplash_11zon.webp","metades":"Embark on a cost-effective backpacking tour to Kodaikanal from Bangalore. Explore tranquil landscapes with great deals. Book your scenic adventure now!","metatitle":"Kodaikanal Backpacking Tour - Scenic Savings | Exclusive Offers","testimagealt":"Misty Forest Harmony: Kodaikanal Backpacking Tour with Stunning Green Trees","batch":[{"date":"16 Feb, 2024 (Friday)","amount":6499},{"date":"01 Mar, 2024 (Friday)","amount":6499},{"date":"29 Mar, 2024 (Friday)","amount":6499}],"originalprice":6999,"h2":"Kodaikanal Trip from Bangalore"},{"over":["Experience the mystical charm of Chikmagalur's offbeat Horanadu Temple and immerse yourself in spiritual serenity. Wander through the lush forests to discover the enchanting Soormane Falls, where the cascading waters create a mesmerizing ambiance. At the Samse Tea Estate, you can savor the aroma of fresh tea leaves and witness the art of tea processing. Cross the thrilling Kalasa Hanging Bridge, swaying gently over the valley, and be captivated by the breathtaking landscapes.","For a panoramic view, don't miss Rani Jhari's viewpoint side, where nature's beauty unfolds before your eyes. This unforgettable journey in Chikmagalur is a blend of spirituality, natural wonders, and a hint of adventure, making it a perfect escape for those seeking a unique and tranquil experience."],"included":["Comfortable and hygienic transportation","Breakfast on Day 1 and  Day 2","Dinner on Day 1","Experienced driver and certified tour captain","Sightseeing as per itinerary","Accommodation"],"notincluded":["Entry charges to sightseeing locations","Additional adventure or water activities","Lunch on all days","Dinner on Day 2","Personal expenses","Anything not mentioned in the \"What's Included\" section"],"things":["ID: Soft-copy of Aadhar or government ID","Backpack: Trek-friendly","Clothes: Layered, extra socks","Rain Gear: Poncho/Raincoat","Toiletries: Basics","Snacks: Juice packs, energy bars","Medication: Personal","Camera: Optional","Power Bank"],"relatedtreks":[],"_id":"6544d1c414b99dd8e47502c4","name":"Chikmagalur Backpacking Tour","maintype":"grouptour","statetype":"Karnataka","state":"State","for":"For","fromamount":5499,"reserveamount":2500,"day":"2 Days / 1 Night","trektype":"Tour Type","trektypename":"Off Beat Tour","level":"Activity-Level","levelname":"Easy","service":"Stay type","statename":"Karnataka","expertpara":"","lead1name":"","lead1oc":"","lead1pimgalt":"","itinerary":"The following detailed itinerary provides a day-by-day breakdown of your Chikmagalur Backpacking Tour. From your late-evening departure from Bangalore to the moment you arrive back home, we've outlined your activities and experiences to make the most of your trip. Let's dive into the specifics.","days":[{"description":["Your Chikmagalur adventure begins with an overnight journey from Bangalore. Our representative will pick you up in the late evening from the following convenient locations:","Indiranagar - Karachi Bakery","Domlur - Union Bank","Yeshwanthpur - Metro Station Market Exit","Gorguntepalya - People Tree Hospital","Enjoy a scenic overnight journey, accompanied by  AC Pushback seater suitable for your group size."],"day":"Day 0","cityName":"Departure from Bangalore","meals":"Please have your dinner before boarding the vehicle","_id":"6544d1c414b99dd8e47502c5"},{"description":["Begin your day in Chikmagalur with a refreshing arrival in the morning, surrounded by picturesque valleys.","Check in at your hotel and complete the necessary formalities, Have breakfast to kick-start your day.","Embark on a sightseeing adventure in Chikmagalur, visiting the following attractions:","Horanadu temple is a sacred place dedicated to Goddess Annapoorneshwari, known for providing blessings and nourishment to worshippers.","Soormane Falls where nature's beauty takes center stage, providing a tranquil and refreshing retreat.","Take a break for lunch (self-sponsored)","Samse Tea Estate invites visitors to explore its scenic tea plantations, where lush landscapes and the aroma of fresh tea leaves create a delightful experience.","Kalasa Hanging Bridge offers stunning views while crossing it making for a thrilling experience in beautiful surroundings.","Rani Jhari's viewpoint provides a scenic perch to admire nature's beauty, making it a serene spot to enjoy stunning views.","Return to the homestay after your sightseeing tour and have dinner.","Experience a comfortable overnight stay in Chikmagalur."],"day":"Day 1","cityName":"Chikmagalur Off Beat Exploration","meals":"Breakfast, Dinner","_id":"6544d1c414b99dd8e47502c6"},{"description":["Start your morning with breakfast at the homestay.","Check out from the hotel and get ready for your return journey to Bangalore, On your way back to Bangalore, the itinerary includes the following attractions:","Nandi Basaweshwara temple where ancient architecture meets spiritual serenity, offers a peaceful retreat for seekers and visitors alike.","Bettada Byraveshwara This is a small temple dedicated to Lord Shiva,  It is located around 37km from Sakleshpur and is situated near Mekanagadde in Sakleshpur.","Majagahalli Falls At a distance of 5 km from Hanbal and 21 km from Sakleshpur, Magajahalli Falls is a beautiful waterfall situated at Magajahalli Village in the Hassan district of Karnataka. It is one of the picturesque waterfalls in Sakleshpur and among the best.","Take a break for lunch (self-sponsored)","Manjarabad Fort which is a unique star-shaped fort. It offers a panoramic view of the Western Ghats and is an excellent spot for photography. Spend some time exploring the fort and its surroundings.","Depart for Bangalore, carrying a bag full of unforgettable experiences, Anticipate reaching Bangalore between 11:00 PM to 12:00 AM."],"day":"Day 2","cityName":"Sightseeing and Departure","meals":"Breakfast","_id":"6544d1c414b99dd8e47502c7"}],"expectpara":"Immerse yourself in the spiritual aura of Horanadu Temple, a sacred haven nestled in the heart of Chikmagalur. Feel the misty embrace of Soormane Falls and wander through the verdant Samse Tea Estate. Cross the exhilarating Kalasa Hanging Bridge and soak in the panoramic beauty from Rani Jhari's viewpoint. Engage with warm-hearted locals, enriching your journey with cultural insights. Cherish serene walks and unwind in nature's lap, creating cherished memories in comfortable accommodations guided by local expertise.","expecthead1":"Accommodations","expecthead1para":"Homestay with Dorm or twin-sharing Tents","expecthead2":"Backpackers United Team","expecthead2para":"Backpackers experts will accompany the entire trip, and local backpackers will join us along the way.","faq":[{"question":"How can I reserve my slot ?","answer":"You can directly reserve your slots by booking on the website, please ensure proper dates are selected before confirming your booking.","_id":"6544d1c414b99dd8e47502c8"},{"question":"Is it safe for Women travellers ?","answer":"Safety and Security Guidelines are followed at all times, and it is our topmost priority.\nWe have certified trek leads (Male/Female) accompanying the participants at all times and our stay follows well-rounded safety measures.","_id":"6544d1c414b99dd8e47502c9"},{"question":"What payment options do I have ?","answer":"We have multiple payment options on the website that you can refer to.","_id":"6544d1c414b99dd8e47502ca"},{"question":"What is Chikmagalur famous for?","answer":"Chikmagalur, nestled in the Western Ghats of Karnataka, is renowned for its picturesque landscapes, coffee plantations, trekking routes, wildlife sanctuaries, enchanting waterfalls, and the scenic Mullayanagiri Peak, which is the highest peak in Karnataka."},{"question":"What can i purchase in Chikmagalur?","answer":"Chikmagalur is also known as the \"Coffee Land of Karnataka\" due to its extensive coffee plantations and rich coffee-growing heritage.Explore vibrant local markets and specialty stores that offer a diverse range of coffee varieties, from aromatic Arabica to robust Robusta"},{"question":"what is the best time to visit chikmagalur??","answer":"The best time to visit Chikmagalur is from September to March. During this period, the weather is pleasant, and the temperature ranges from 14°C to 32°C, making it ideal for outdoor activities and sightseeing."},{"question":"Which food is famous in Chikmagalur?","answer":"Cheenikaayi Kadubu is one of the most famous food in Chikamaglur."}],"related":[{"rday":"2 Days For","rname":"Kodaikanal Backpacking Tour","ramount":6999,"rimagealt":"Kodaikanal Tour","rtype":"Tour Type ","rtypename":"Off Beat Tour","rlevel":"Stay-Type","rlevelname":"Home Stay","rservice":"State","rservicename":"Tamilnadu","_id":"6544d1c414b99dd8e47502cb","rimage":"balaji-malliswamy-KDIBZFIw-wQ-unsplash_11zon.webp"},{"rday":"2 Days For","rname":"Ooty Backpacking Tour","ramount":6999,"rimagealt":"Ooty","rtype":"Tour Type ","rtypename":"Off Beat Tour","rlevel":"Stay-Type","rlevelname":"Home Stay","rservice":"State","rservicename":"Tamilnadu","_id":"6544d1c414b99dd8e47502cc","rimage":"testimage--chaitanya-rayampally-XhYP3T-telg-unsplash_11zon.webp"},{"rday":"2 Days For","rname":"Thekkady Weekend Getaway","ramount":6999,"rimagealt":"Thekkady Tour","rtype":"Tour Type ","rtypename":"Nature Tour","rlevel":"Stay-Type","rlevelname":"3 Star Hotel","rservice":"State","rservicename":"Kerala","_id":"6544d1c414b99dd8e47502cd","rimage":"navi-pk0gENGSkqE-unsplash_11zon.webp"}],"batch":[{"date":"23 Feb, 2024 (Friday)","amount":5499},{"date":"29 Mar, 2024 (Friday)","amount":5499}],"createdAt":"2023-11-03T10:56:04.022Z","updatedAt":"2023-11-14T21:14:45.764Z","__v":0,"servicename":"Home Stay","urllink":"chikmagalur-backpacking-tour","amount":"5499","testimage":"3_3_11zon.webp","metades":"Embark on a budget-friendly backpacking tour from Bangalore to Chikmagalur. Discover hills and coffee estates with special discounts. Book now!","metatitle":"Chikmagalur Backpacking: Budget Adventure from Bangalore","testimagealt":"Chikmagalur Backpacking Tour: Journey Along a Scenic Hillside Road in Greenery","originalprice":6999,"h2":"Chikmagalur Trip from Bangalore"}],"_id":"6556003af60257e0f27945d0","name":"10 must visit places in Pondicherry","urllink":"10-must-visit-places-in-pondicherry","blogs":[{"title":"Promenade Beach","para":"Where Tranquility Meets the Sea: Immerse yourself in the serene ambiance of Promenade Beach, a picturesque stretch of coastline perfect for a leisure stroll. Lined with vibrant cafes and boasting French colonial architecture, it's an idyllic spot to unwind and savor the sea breeze.","image":"blogImage[0]--Promenade Beach.webp","imagealt":"Promenade Beach","_id":"6556003af60257e0f27945d1"},{"title":"Auroville","para":"A Spiritual Oasis: Embark on a journey to Auroville, an experimental township renowned for its spiritual significance. At its heart lies the iconic Matrimandir, a golden sphere beckoning seekers from around the globe. Explore the Auroville Visitor's Centre to delve into the philosophy that underpins this unique community.","image":"blogImage[1]--Auroville.webp","imagealt":"Auroville","_id":"6556003af60257e0f27945d2"},{"title":"Sri Aurobindo Ashram","para":"Tranquil Haven: Find solace at the Sri Aurobindo Ashram, a spiritual retreat founded by Sri Aurobindo and the Mother. The ashram's serene surroundings and the opportunity to meditate at the samadhi make it a haven for those seeking inner peace.","image":"blogImage[2]--Sri Aurobindo Ashram.webp","imagealt":"Sri Aurobindo Ashram","_id":"6556003af60257e0f27945d3"},{"title":"Paradise Beach","para":"A Hidden Gem: Escape to Paradise Beach, accessible by a short boat ride. This secluded haven offers golden sands, clear blue waters, and a tranquil atmosphere, making it an ideal spot for relaxation and water activities.","image":"blogImage[3]--Paradise Beach.webp","imagealt":"Paradise Beach","_id":"6556003af60257e0f27945d4"},{"title":"French Quarter","para":"Colonial Elegance: Wander through the charming streets of the French Quarter, where colonial-era architecture paints a vibrant backdrop. Cafes, boutiques, and art galleries dot the cobblestone streets, creating a delightful blend of French and Indian influences.","image":"blogImage[4]--French Quarter.webp","imagealt":"French Quarter","_id":"6556003af60257e0f27945d5"},{"title":"Arikamedu","para":"Unveiling Ancient Trade Routes: History comes alive at Arikamedu, an archaeological site revealing the ancient trade ties between the Romans and Tamils. Explore the remnants of Roman pottery and immerse yourself in the historical significance of this unique location.","image":"blogImage[5]--Arikamedu.webp","imagealt":"Arikamedu","_id":"6556003af60257e0f27945d6"},{"title":"Botanical Garden","para":"Green Oasis in the Heart of Pondicherry: Established in 1826, the Botanical Garden is a verdant escape boasting a diverse collection of plants and trees. Take a leisurely stroll amidst the greenery or hop on the Toy Train for a family-friendly adventure.","image":"blogImage[6]--Botanical Garden.webp","imagealt":"Botanical Garden","_id":"6556003af60257e0f27945d7"},{"title":"Manakula Vinayagar Temple","para":"Spiritual Splendor: Marvel at the intricate architecture of the Manakula Vinayagar Temple, an ancient shrine dedicated to Lord Ganesha. The vibrant sculptures and carvings add to the spiritual ambiance, making it a must-visit for devotees and architecture enthusiasts alike.","image":"blogImage[7]--Manakula Vinayagar Temple.webp","imagealt":"Manakula Vinayagar Temple","_id":"6556003af60257e0f27945d8"},{"title":"Pondicherry Museum","para":"Unveiling Cultural Heritage: Dive into the cultural heritage of Pondicherry at the Pondicherry Museum. Admire sculptures, artifacts, and archaeological finds that offer a glimpse into the town's rich history and artistry.","image":"blogImage[8]--Pondicherry Museum.webp","imagealt":"Pondicherry Museum","_id":"6556003af60257e0f27945d9"},{"title":"Goubert Avenue (Beach Road)","para":"Scenic Serenity: Take in the scenic beauty along Goubert Avenue, or Beach Road, which runs along the Bay of Bengal. An ideal spot for an evening stroll, it comes alive with street vendors and activities, offering a perfect blend of tranquility and vibrancy.","image":"blogImage[9]--Goubert Avenue (Beach Road).webp","imagealt":"Goubert Avenue (Beach Road)","_id":"6556003af60257e0f27945da"}],"createdAt":"2023-11-16T11:42:50.415Z","updatedAt":"2023-11-16T11:42:50.415Z","__v":0,"metades":"Discover the charm of Pondicherry with Backpackers United. Explore the city's rich heritage, pristine beaches, and vibrant culture through our guide to the top 10 must-visit places.","metatitle":"Pondicherry Paradise: Explore the Top 10 Must-Visit Places | Backpackers United"}","status":200,"url":"https://launch-api1.vercel.app/blog/10-must-visit-places-in-pondicherry"},"revalidate":60,"tags":[]}