{"kind":"FETCH","data":{"headers":{"access-control-allow-origin":"*","age":"0","cache-control":"public, max-age=0, must-revalidate","connection":"keep-alive","content-encoding":"br","content-type":"application/json; charset=utf-8","date":"Thu, 15 Feb 2024 09:19:09 GMT","etag":"W/\"2985-e0qOAMUv59eD3Grrtb3aE5UOfK0\"","server":"Vercel","strict-transport-security":"max-age=63072000; includeSubDomains; preload","transfer-encoding":"chunked","x-powered-by":"Express","x-vercel-cache":"MISS","x-vercel-id":"bom1::iad1::n7ph5-1707988748858-fce56eafbd7d"},"body":"","status":200,"url":"https://launch-api1.vercel.app/trek/tour/hampi-heritage-tour"},"revalidate":60,"tags":[]}