{"kind":"FETCH","data":{"headers":{"access-control-allow-origin":"*","age":"0","cache-control":"public, max-age=0, must-revalidate","connection":"keep-alive","content-encoding":"br","content-type":"application/json; charset=utf-8","date":"Tue, 30 Jan 2024 18:46:23 GMT","etag":"W/\"5cb5-sUr1eIZqzdnwY0CUo2fyly7LcTo\"","server":"Vercel","strict-transport-security":"max-age=63072000; includeSubDomains; preload","transfer-encoding":"chunked","x-powered-by":"Express","x-vercel-cache":"MISS","x-vercel-id":"bom1::iad1::dlgvw-1706640382462-0ccea70df245"},"body":"","status":200,"url":"https://launch-api1.vercel.app/dest/vietnam"},"revalidate":31536000,"tags":[]}