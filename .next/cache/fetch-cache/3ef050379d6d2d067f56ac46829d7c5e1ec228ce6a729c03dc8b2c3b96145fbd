{"kind":"FETCH","data":{"headers":{"access-control-allow-origin":"*","age":"0","cache-control":"public, max-age=0, must-revalidate","connection":"keep-alive","content-encoding":"br","content-type":"application/json; charset=utf-8","date":"Tue, 27 Feb 2024 05:20:58 GMT","etag":"W/\"bcae-rRn25sF5m5Ti1lgkrUHt5bfRoP4\"","server":"Vercel","strict-transport-security":"max-age=63072000; includeSubDomains; preload","transfer-encoding":"chunked","x-powered-by":"Express","x-vercel-cache":"MISS","x-vercel-id":"bom1::iad1::zmv9w-1709011257138-30682a791770"},"body":"","status":200,"url":"https://launch-api1.vercel.app/dest/wayanad"},"revalidate":60,"tags":[]}