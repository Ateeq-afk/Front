{"kind":"FETCH","data":{"headers":{"access-control-allow-origin":"*","age":"0","cache-control":"public, max-age=0, must-revalidate","connection":"keep-alive","content-encoding":"br","content-type":"application/json; charset=utf-8","date":"Wed, 21 Feb 2024 06:24:11 GMT","etag":"W/\"989a-o/Egq4HX88iQPmt6sHdoQzrn3B8\"","server":"Vercel","strict-transport-security":"max-age=63072000; includeSubDomains; preload","transfer-encoding":"chunked","x-powered-by":"Express","x-vercel-cache":"MISS","x-vercel-id":"bom1::iad1::hdbvj-1708496650759-0c0c71be6043"},"body":"","status":200,"url":"https://launch-api1.vercel.app/trek/trek/gokarna-beach-trek"},"revalidate":60,"tags":[]}